import React, { useState, useEffect } from "react";
import "./App.css";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { useNavigate } from "react-router-dom"; // ✅ Added

function App() {
  const [notes, setNotes] = useState("");
  const [summary, setSummary] = useState("");
  const [quiz, setQuiz] = useState([]);
  const [loading, setLoading] = useState(false);
  const navigate = useNavigate(); // ✅ Added

  useEffect(() => {
    const savedSummary = localStorage.getItem("summary");
    const savedQuiz = localStorage.getItem("quiz");
    if (savedSummary) setSummary(savedSummary);
    if (savedQuiz) setQuiz(JSON.parse(savedQuiz));
  }, []);

  useEffect(() => {
    summary
      ? localStorage.setItem("summary", summary)
      : localStorage.removeItem("summary");
  }, [summary]);

  useEffect(() => {
    quiz.length > 0
      ? localStorage.setItem("quiz", JSON.stringify(quiz))
      : localStorage.removeItem("quiz");
  }, [quiz]);

  const handleSummarize = async () => {
    if (!notes.trim()) {
      toast.error("⚠ Please enter some notes first!");
      return;
    }

    try {
      setLoading(true);
      toast.info("⏳ Generating summary...");

      const response = await fetch("http://localhost:4000/api/summarize", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ notes }),
      });

      const data = await response.json();
      setLoading(false);

      if (data.summary) {
        setSummary(data.summary);
        toast.success("✅ Summary generated!");
      } else {
        toast.error("❌ Failed to get summary.");
      }
    } catch (err) {
      console.error(err);
      setLoading(false);
      toast.error("⚠ Backend error.");
    }
  };

  const handleQuiz = async () => {
    if (!notes.trim()) {
      toast.error("⚠ Please enter some notes first!");
      return;
    }

    try {
      setLoading(true);
      toast.info("⏳ Generating quiz...");

      const response = await fetch("http://localhost:4000/api/generate-quiz", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ notes }),
      });

      const data = await response.json();
      setLoading(false);

      if (data.quiz) {
        const quizText = data.quiz;

        localStorage.setItem("quizRaw", quizText); // ✅ store for quiz game
        const quizLines = quizText.split("\n").filter(line => line.trim() !== "");
        setQuiz(quizLines);

        toast.success("✅ Quiz generated!");
        navigate("/quiz"); // ✅ redirect to quiz game
      } else {
        toast.error("❌ Failed to get quiz.");
      }
    } catch (err) {
      console.error(err);
      setLoading(false);
      toast.error("⚠ Backend error.");
    }
  };

  const handleClear = () => {
    setNotes("");
    setSummary("");
    setQuiz([]);
    localStorage.removeItem("summary");
    localStorage.removeItem("quiz");
    localStorage.removeItem("quizRaw");
    window.scrollTo({ top: 0, behavior: "smooth" });
    toast.success("✅ Reset complete!");
  };

  return (
    <div className="App">
      <div className="content-wrapper">
        <h1>📚 SmartBuddy</h1>

        <textarea
          rows="10"
          placeholder="Paste your notes here..."
          value={notes}
          onChange={(e) => setNotes(e.target.value)}
        />

        <div className="button-group">
          <button onClick={handleSummarize} disabled={loading}>
            {loading ? "Summarizing..." : "Summarize"}
          </button>
          <button onClick={handleQuiz} disabled={loading}>
            {loading ? "Generating Quiz..." : "Generate Quiz"}
          </button>
          <button onClick={handleClear}>Clear All</button>
        </div>

        {summary && (
          <div className="section-box">
            <h2>📄 Summary</h2>
            <p>{summary}</p>
          </div>
        )}
      </div>

      <ToastContainer position="top-right" autoClose={2000} hideProgressBar={false} />
    </div>
  );
}

export default App;
